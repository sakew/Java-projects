import java.io.*;
import java.util.*;

public class processShow {
	public void printProcess() throws IOException {
	// Print which operating system you are currently running		
		
		
		final String OS = System.getProperty("os.name").toLowerCase();
		
		System.out.println("You are currently running on " + OS + " operating system");
		
	// show processes on linux systems		
			
			if (OS.startsWith("linux")) {
			
				Process process = Runtime.getRuntime().exec("ps -eo user,pid,start,etime,command");
			
	// get input stream of data from the subprocess
				
				Scanner scanner = new Scanner(new InputStreamReader(process.getInputStream()));
				
	// create file in which we will put the output from the console		
			
				PrintStream out = new PrintStream(new File("output.odt"));
	
	// set a console stream in which we store the old output method	
				
				PrintStream console = System.out;
	
	// set new configuration to guide output to created 'output.odt' txt file			
				System.setOut(out);
	
	// reads all items from list generated by the command above until it hits the last one.			
				
				while(scanner.hasNextLine()) {
					
					System.out.println(scanner.nextLine());
				}
				
				
	// close the scanner after finished.		
						
						scanner.close();
	
	// after scanner closes we can set it back to normal output
						
				System.setOut(console);		
						
	
				consoleReader consolereader = new consoleReader();
				consolereader.readConsole();
				
						
						
	// show processes on windows systems					
						
			} else if (OS.startsWith("windows")) {
	// after command is executed the scanner comes in and reads all items following the command from above.
			
				Process process = Runtime.getRuntime().exec("tasklist.exe");
				
				Scanner scanner = new Scanner(new InputStreamReader(process.getInputStream()));
				
				// create file in which we will put the output from the console		
				
				PrintStream out = new PrintStream(new File("output.odt"));
	
	// set a console stream in which we store the old output method	
				
				PrintStream console = System.out;
	
	// set new configuration to guide output to created 'output.odt' txt file			
				System.setOut(out);
	
	// reads all items from list generated by the command above until it hits the last one.			
				
				while(scanner.hasNextLine()) {
					
					System.out.printf(scanner.nextLine());
				}
				
				
	// close the scanner after finished.		
						
						scanner.close();
	
	// after scanner closes we can set it back to normal output
						
				System.setOut(console);		
					
		}
	}
}